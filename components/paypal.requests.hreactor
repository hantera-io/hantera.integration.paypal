import { http } from 'web'

let baseUrl |> registry->'externalServices/paypal/baseUrl'
let encodedCredentials |> registry->'externalServices/paypal/encodedCredentials'

let oauthToken: {
  scope: text
  access_token: text
  token_type: text
  app_id: text
  expires_in: number
  nonce: text
}

let generateAccessToken = (_) =>
  http($'{baseUrl}/v1/oauth2/token', {
    method = 'POST',
    headers = {
      'Authorization' -> $'Basic {encodedCredentials}'
      'Content-Type' -> 'application/x-www-form-urlencoded'
    }
    body = 'grant_type=client_credentials'
  }) match
    (res: HttpResponseOk) |> res.content match
      oauthToken |> res.content.access_token

let getPayment(paymentId: uuid) =>
  let paymentQuery =
    query payments(
      paymentNumber
      providerKey
      currencyCode
      authorizedAmount
      creditBalance
      capturedBalance
      createdAt
      dynamic
      tags
    )
    filter $'paymentId == {paymentId}'
  from paymentQuery match
    QueryError |> nothing
    |>
      paymentQuery
      first